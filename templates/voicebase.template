{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VoiceBase API Gateway for Amazon Connect",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
            {
                "Label": {
                    "default": "Connect Instance"
                },
                "Parameters": [
                    "connectS3BucketName",
                    "connectKinesisStreamArn"
                ]
            },
            {
                "Label": {
                    "default": "VoiceBase API Gateway"
                },
                "Parameters": [
                    "voicebaseApiToken",
                    "voicebaseEnableKnowledgeDiscovery",
                    "numberOfKinesisShards"
                ]
            }
            ],
            "ParameterLabels": {
                "connectS3BucketName": {
                    "default": "Call Recording S3 Bucket Name"
                },
                "voicebaseApiToken": {
                    "default": "VoiceBase API Token"
                },
                "voicebaseEnableKnowledgeDiscovery": {
                    "default": "Keyword/Topic extraction"
                },
                "connectKinesisStreamArn": {
                    "default": "Connect Output Stream ARN"
                },
                "numberOfKinesisShards": {
                    "default": "VoiceBase Transcript Stream Shard Count"
                }
            }
        }
    },
    "Parameters": {
        "voicebaseApiToken": {
            "Type": "String",
            "Default": "",
            "Description": "Enter your Voicebase API Token"
        },
        "voicebaseEnableKnowledgeDiscovery": {
            "AllowedValues": [
                "no",
                "yes"
            ],
            "Type": "String",
            "Default": "no",
            "Description": "Enable keyword/topic extraction when processing media files by default"
        },        
        "connectS3BucketName": {
            "Type": "String",
            "Default": "",
            "Description": "Enter the name of the bucket where your Connect instance stores call recordings."
        },
        "connectKinesisStreamArn": {
            "Type": "String",
            "Default": "",
            "Description": "Enter the ARN of your Connect instance's output Kinesis stream."
        },
        "numberOfKinesisShards": {
            "Type": "Number",
            "Default": 1,
            "Description": "Number of shards for transcription stream, should be at least the number of shards on Connect's output stream."
        }
    },
    "Rules": {
        "RegionSupport": {
            "Assertions": [{
                "Assert": {
                    "Fn::Contains" : [["us-east-1"], {"Ref": "AWS::Region"}]
                },
                "AssertDescription": "Supported regions: US East (N. Virginia) - us-east-1"
            }]
        }
    },
    "Conditions": {
        "enableKnowledgeDiscovery": {
           "Fn::Equals": [{ "Ref": "voicebaseEnableKnowledgeDiscovery" },"yes"]
        }
    },
    "Resources": {
        "connectToVoicebaseRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com"
                            ]
                        }
                    }],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
            }
        },
        "voicebaseCallbackRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com"
                            ]
                        }
                    }],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
            }
        },
        "voicebaseCallbackKinesisPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "voicebaseCallbackKinesisPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": [
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kinesis:GetShardIterator",
                            "kinesis:PutRecords",
                            "kinesis:PutRecord"
                        ],
                        "Resource": [{
                            "Fn::GetAtt": ["voicebaseTranscriptionStream", "Arn"]
                        }]
                    }]
                },
                "Roles": [{
                    "Ref": "voicebaseCallbackRole"
                }]
            }
        },
        "voicebaseCallbackLogPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "voicebaseCallbackLogPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": ["", ["arn:aws:logs:", {
                                    "Ref": "AWS::Region"
                                }, ":", {
                                    "Ref": "AWS::AccountId"
                                }, ":*"]]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [{
                                "Fn::Join": ["", ["arn:aws:logs:", {
                                        "Ref": "AWS::Region"
                                    }, ":", {
                                        "Ref": "AWS::AccountId"
                                    }, ":log-group:/aws/lambda/",
                                    {
                                        "Fn::Select": ["6", {
                                            "Fn::Split": [":", {
                                                "Fn::GetAtt": [
                                                    "voicebaseCallbackLambda",
                                                    "Arn"
                                                ]
                                            }]
                                        }]
                                    }, ":*"
                                ]]
                            }]
                        }
                    ]
                },
                "Roles": [{
                    "Ref": "voicebaseCallbackRole"
                }]
            }
        },
        "connectToVoicebaseS3Policy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "connectToVoicebaseS3Policy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectAcl"
                            ],
                            "Resource": [{
                                "Fn::Join": ["", ["arn:aws:s3:::",{"Ref": "connectS3BucketName" }, "/*"]]
                            }]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetBucketLocation",
                                "s3:GetBucketAcl"
                            ],
                            "Resource": [{
                                   "Fn::Join": ["", ["arn:aws:s3:::",{"Ref": "connectS3BucketName" }]]
                                }]
                        }
                    ]
                },
                "Roles": [{
                    "Ref": "connectToVoicebaseRole"
                }]
            }
        },
        "connectToVoicebaseLogPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "connectToVoicebaseLogPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": ["", ["arn:aws:logs:", {
                                    "Ref": "AWS::Region"
                                }, ":", {
                                    "Ref": "AWS::AccountId"
                                }, ":*"]]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [{
                                "Fn::Join": ["", ["arn:aws:logs:", {
                                        "Ref": "AWS::Region"
                                    }, ":", {
                                        "Ref": "AWS::AccountId"
                                    }, ":log-group:/aws/lambda/",
                                    {
                                        "Fn::Select": ["6", {
                                            "Fn::Split": [":", {
                                                "Fn::GetAtt": [
                                                    "connectToVoicebaseLambda",
                                                    "Arn"
                                                ]
                                            }]
                                        }]
                                    }, ":*"
                                ]]
                            }]
                        }
                    ]
                },
                "Roles": [{
                    "Ref": "connectToVoicebaseRole"
                }]
            }
        },
        "connectToVoicebaseKMSPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "connectToVoicebaseKMSPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": [
                            "kms:Decrypt"
                        ],
                        "Resource": "*"
                    }]
                },
                "Roles": [{
                    "Ref": "connectToVoicebaseRole"
                }]
            }
        },
        "connectToVoicebaseKinesisPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "connectToVoicebaseKinesisPolicy",
                "PolicyDocument": {
                    "Statement": [{
                        "Action": [
                            "kinesis:DescribeStream",
                            "kinesis:ListStreams",
                            "kinesis:GetShardIterator",
                            "kinesis:GetRecords",
                            "kinesis:GetRecord"
                        ],
                        "Effect": "Allow",
                        "Resource": [{
                            "Ref": "connectKinesisStreamArn"
                        }]
                    }],
                    "Version": "2012-10-17"
                },
                "Roles": [{
                    "Ref": "connectToVoicebaseRole"
                }]
            }
        },
        "voicebaseTranscriptionStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "ShardCount": {
                    "Ref": "numberOfKinesisShards"
                }
            }

        },
        "voicebaseCallbackApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {"Fn::Join":["-",[{"Ref":"AWS::StackName"},"VoiceBaseCallbackApi",{"Fn::Select": [0,{"Fn::Split": ["-", {"Fn::Select": [2,{"Fn::Split":["/",{"Ref":"AWS::StackId"}]}]}]}]}]]}
            }
        },
        "connectToVoicebaseLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "MemorySize": 256,
                "Handler": "com.voicebase.gateways.lily.LambdaRecordProcessor::handleRequest",
                "Role": {
                    "Fn::GetAtt": [
                        "connectToVoicebaseRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "static.dev.voicebase.com",
                    "S3Key": "aws-connect-lambda.jar"
                },
                "Environment": {
                    "Variables": {
                        "VOICEBASE_API_TOKEN": {
                            "Ref": "voicebaseApiToken"
                        },
                        "VOICEBASE_KNOWLEDGE_DISCOVERY_ENABLE": {
                            "Fn::If": ["enableKnowledgeDiscovery","true","false"]      
                        },                        
                        "VOICEBASE_CALLBACK_URL": {
                            "Fn::Join": ["", ["https://", {
                                "Ref": "voicebaseCallbackApi"
                            }, ".execute-api.", {
                                "Ref": "AWS::Region"
                            }, ".amazonaws.com/public/outgoing"]]
                        }
                    }
                },
                "Runtime": "java8",
                "Timeout": "90"
            }
        },
        "voicebaseCallbackLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "MemorySize": 256,
                "Handler": "com.voicebase.gateways.lily.LambdaTranscriptionProcessor::handleRequest",
                "Role": {
                    "Fn::GetAtt": [
                        "voicebaseCallbackRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "static.dev.voicebase.com",
                    "S3Key": "aws-connect-lambda.jar"
                },
                "Environment": {
                    "Variables": {
                        "VOICEBASE_TRANSCRIPT_OUTPUT_STREAM": {
                            "Ref": "voicebaseTranscriptionStream"
                        }
                    }
                },
                "Runtime": "java8",
                "Timeout": "90"
            }
        },
        "connectToVoicebaseLambdaMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": ["connectToVoicebaseKinesisPolicy","connectToVoicebaseLogPolicy"],
            "Properties": {
                "BatchSize": 10,
                "Enabled": true,
                "EventSourceArn": {
                    "Ref": "connectKinesisStreamArn"
                },
                "FunctionName": {
                    "Ref": "connectToVoicebaseLambda"
                },
                "StartingPosition": "LATEST"
            }
        },
        "voicebaseCallbackLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": ["voicebaseCallbackLambda", "Arn"]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": ["", ["arn:aws:execute-api:", {
                        "Ref": "AWS::Region"
                    }, ":", {
                        "Ref": "AWS::AccountId"
                    }, ":", {
                        "Ref": "voicebaseCallbackApi"
                    }, "/*"]]
                }
            }
        },
        "voicebaseCallbackStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "voicebaseCallbackDeployment"
                },
                "MethodSettings": [{
                    "DataTraceEnabled": true,
                    "HttpMethod": "POST",
                    "ResourcePath": "/*"
                }],
                "RestApiId": {
                    "Ref": "voicebaseCallbackApi"
                },
                "StageName": "latest"
            }
        },
        "voicebaseCallbackDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": ["voicebaseCallbackMethod"],
            "Properties": {
                "RestApiId": {
                    "Ref": "voicebaseCallbackApi"
                },
                "StageName": "public"
            }
        },
        "voicebaseCallbackResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "voicebaseCallbackApi"
                },
                "ParentId": {
                    "Fn::GetAtt": ["voicebaseCallbackApi", "RootResourceId"]
                },
                "PathPart": "outgoing"
            }
        },
        "voicebaseCallbackMethod": {
            "DependsOn": "voicebaseCallbackLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Join": ["", ["arn:aws:apigateway:", {
                            "Ref": "AWS::Region"
                        }, ":lambda:path/2015-03-31/functions/", {
                            "Fn::GetAtt": ["voicebaseCallbackLambda", "Arn"]
                        }, "/invocations"]]
                    },
                    "IntegrationResponses": [{
                        "StatusCode": 200
                    }],
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": ["", [
                                "{",
                                "\"name\": \"$input.params('name')\"",
                                "}"
                            ]]
                        }
                    }
                },
                "RequestParameters": {
                    "method.request.querystring.name": false
                },
                "ResourceId": {
                    "Ref": "voicebaseCallbackResource"
                },
                "RestApiId": {
                    "Ref": "voicebaseCallbackApi"
                },
                "MethodResponses": [{
                    "StatusCode": 200
                }]
            }
        }
    },
    "Outputs": {
        "voicebaseTranscriptionStream": {
            "Description": "VoiceBase Transcription Stream.  Transcription delivered from VoiceBase.",
            "Value": {
                "Fn::GetAtt": "voicebaseTranscriptionStream.Arn"
            }
        }
    }
}